name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-2016, macos-10.15 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Static Analysis
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          flake8 --count --max-line-length=120 --statistics pillow_jpls

      - name: Build wheels with cibuildwheel
        uses: joerick/cibuildwheel@v1.9.0
        env:
           # Python 2.7 not supported
           # Python 3.5 Deprecated
           # Pillow requires zlib to compile for PyPy on Windows
           CIBW_SKIP: cp27-* cp35-* pp27-* pp36-win32 pp37-win32
           # numpy > 1.18 requires OpenBlas on macos
           CIBW_TEST_REQUIRES: pytest numpy==1.18
           CIBW_TEST_COMMAND: pytest -v {project}/test
           # Pybind std::variant support requires 10.14+
           MACOSX_DEPLOYMENT_TARGET: 10.15

      - name: Upload wheel files
        uses: actions/upload-artifact@v2
        with:
            name: pillow_jpls_wheels
            path: ./wheelhouse/*.whl

  deploy_pypi:
    name: Deploy to PyPi
    if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/main' }}
    needs: build_wheels
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Preprequisites
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Download built wheels
        uses: actions/download-artifact@v2
        with:
          name: pillow_jpls_wheels
          path: dist

      - name: Upload to PyPi
        run: |
          echo ${GITHUB_REF}
          [[ ${GITHUB_REF} == "refs/heads/main" ]] && PYPI_REPOSITORY="--repository testpypi"
          twine upload ${PYPI_REPOSITORY} dist/*
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
